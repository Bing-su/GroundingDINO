name: Python Build Wheel

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        config:
          - torch-version: "2.3.0"
            cuda-version: "12.1.0"
            arch_list: "7.5+PTX;8.0;8.6+PTX;8.7;8.9+PTX;9.0+PTX"
            torch-command: uv pip install --system --no-cache torch==2.3.0+cu121 torchvision==0.18.0+cu121 --index-url https://download.pytorch.org/whl/test/cu121

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: yezz123/setup-uv@v4

      - name: Install dependencies
        run: |
          uv pip install --system --no-cache setuptools wheel build ninja
          ${{ matrix.config.torch-command }}

      - name: Set up cudatoolkit ${{ matrix.config.cuda-version }}
        uses: Jimver/cuda-toolkit@master
        id: cuda-toolkit
        with:
          cuda: ${{ matrix.config.cuda-version }}
          method: network
          use-github-cache: false

      - run: echo "Installed cuda version is → ${{ steps.cuda-toolkit.outputs.cuda }}"
      - run: echo "Cuda install location → ${{ steps.cuda-toolkit.outputs.CUDA_PATH }}"

      - name: Build wheel
        env:
          CUDA_HOME: ${{ steps.cuda-toolkit.outputs.CUDA_PATH }}
          TORCH_CUDA_ARCH_LIST: ${{ matrix.config.arch_list }}
        run: |
          python -m build --no-isolation --wheel

      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.whl
